{"version":3,"sources":["images/tt.svg","images/webapps.svg","images/maps.svg","images/gradeit.svg","images/insurance.svg","images/portfolio1.svg","images/message.svg","images/portfolio2.svg","Components/Header.js","images/TA.jpg","Pages/Experience/ta.js","Pages/Experience/ey.js","Pages/Experience/robotics.js","Pages/Experience/musigma.js","images/CodeItLanding.png","images/Settings.png","images/SignUp.png","images/Courses.png","images/Banner.png","Pages/Projects/codeit.js","images/autocomplete-web.png","Pages/Projects/webapps.js","Pages/Projects/linter.js","Pages/Projects/ed.js","Pages/Projects/maps.js","images/oldportfolio.png","Pages/Projects/portfolio2.js","Components/ContentModal.js","Components/Card.js","Pages/Projects.js","images/teaching.svg","images/ml.svg","images/r.svg","images/data.svg","Pages/Experience.js","images/workingLight.svg","images/workingDark.svg","Pages/AboutMe.js","Resume.pdf","Components/Navbar.js","Components/ButtonGroup.js","Pages/IntroSection.js","Components/Footer.js","Pages/Loader.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Header","props","description","title","marginLeft","textTransform","letterSpacing","fontSize","fontWeight","TA","mt","as","px","mx","src","ta","maxW","EY","Robotics","MuSigma","CodeIt","firstColor","useColorModeValue","leftIcon","colorScheme","size","mr","isExternal","_hover","textDecor","href","display","children","pl","CodeItLanding","Settings","SignUp","Courses","Banner","Webapps","secondColor","color","Autocomplete","Linter","disabled","Ed","Maps","Portfolio","OldPortfolio","pageHandler","ContentModal","onClose","isOpen","start","end","bg","justifyContent","alignItems","scrollBehavior","undefined","orientation","onClick","blink","keyframes","Card","mb","name","image","descriptionSize","newPost","useDisclosure","onOpen","animation","usePrefersReducedMotion","scheme","transition","transform","_active","role","position","textAlign","w","_groupHover","filter","borderRadius","top","float","visibility","p","left","className","pt","py","lineHeight","FaChevronCircleRight","Projects","id","flexDirection","columns","sm","md","tt","height","webapps","insurance","maps","portfolio1","Experience","flexWrap","ey","robot","data","AboutMe","scrollRef","workingLight","workingDark","ref","h","spacing","marginRight","maxH","Navbar","modalbg","useState","page","setPages","variant","borderWidth","borderColor","file","Resume","onDocumentError","err","console","error","onDocumentComplete","numPages","ButtonGroup","icon","IntroSection","heading","buttons","highlightColor","ml","pr","startingHeight","in","Footer","Loader","bottom","marginBottom","theme","extendTheme","styles","global","body","mode","ColorModeSwitcher","toggleColorMode","useColorMode","text","SwitchIcon","FaMoon","FaSun","aria-label","App","myRef","useRef","isHidden","setIsHidden","navbar","setNavbar","bubbles","setBubbles","intro","setIntro","setButtons","useEffect","x","window","scrollX","y","scrollY","onscroll","scrollTo","disableScroll","setInterval","innerSize","outerSize","outerAlpha","innerScale","outerScale","m","current","scrollIntoView","behavior","width","pb","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4251a5d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tt.cfcb5bd6.svg\";","export default __webpack_public_path__ + \"static/media/webapps.328378aa.svg\";","export default __webpack_public_path__ + \"static/media/maps.21492670.svg\";","export default __webpack_public_path__ + \"static/media/gradeit.1c4255bd.svg\";","export default __webpack_public_path__ + \"static/media/insurance.b7a219ec.svg\";","export default __webpack_public_path__ + \"static/media/portfolio1.7e8f02d4.svg\";","export default __webpack_public_path__ + \"static/media/message.2bdfe69f.svg\";","export default __webpack_public_path__ + \"static/media/portfolio2.93231ad4.svg\";","import React from 'react';\nimport { Heading, Box } from '@chakra-ui/react';\n\nconst Header = ({ props, description, title }) => {\n  return (\n    <Box marginLeft=\"20\" {...props}>\n      <Heading\n        textTransform=\"lowercase\"\n        letterSpacing=\"0.2rem\"\n        fontSize=\"xl\"\n        fontWeight=\"300\"\n      >\n        {description}\n      </Heading>\n      <Heading fontSize=\"6xl\">{title}</Heading>\n    </Box>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/TA.e11567ce.jpg\";","import {\n  Box,\n  UnorderedList,\n  ListItem,\n  ModalBody,\n  Image,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport ta from '../../images/TA.jpg';\n\nconst TA = () => {\n  return (\n    <Box mt={2}>\n      <ModalBody>\n        The introductory CS series was my initiation to structured programming\n        as a means to explore the world of computing. I was immediately drawn to\n        concepts of algorithmic thinking and the rigorous underlying\n        mathematics. I decided to share my love for computation by working as a\n        teaching assistant for the CSE 14x community, a class that serves as a\n        stepping-stone into the new world of programming. It was the greatest\n        experience through my time in college and is the reason I am so\n        passionate about promoting computational literacy & inclusive education.\n        My responsabilities include:\n        <br />\n        <br />\n        <UnorderedList as=\"ul\" px={10}>\n          <ListItem>\n            Teaching topics ranging from basic programming to data structure\n            implementations & algorithms\n          </ListItem>\n          <ListItem>\n            Lead weekly recitation sections with around 25 students\n          </ListItem>\n          <ListItem>\n            Worked at introductory programming lab, open to more than 800\n            students enrolled in the introductory series\n          </ListItem>\n          <ListItem>Graded 800+ student midterms & final exams</ListItem>\n        </UnorderedList>\n        <br />I gained invaluable skills & qualities by working with unparalled\n        faculty and a tight-knit community.\n        <br />\n        <br />\n        <UnorderedList as=\"ul\" px={10}>\n          <ListItem>\n            I learned <strong>leadership</strong> skills: Teaching a class of 25\n            students brought out a plethora of challenges. It was a big\n            responsability that I had to take on, and I was thrilled to be part\n            of this bigger community through which I could make a difference and\n            impact the class that I loved. Progressing as a TA, I was tasked\n            with backreading (checking over other TAs grading and deciding\n            grading critera). I spent close to 20 hours a week answering\n            questions from other TAs, checking and rechecking every point. I\n            then worked with instructors to manage the migration the entire\n            codebase into new platforms and developed new tools for homework\n            autograders and server side networks.\n          </ListItem>\n          <ListItem>\n            This created opportunities to <strong>prioritize</strong> and better\n            my <strong>time management</strong>: Working on high impact projects\n            with faculty, teaching, backreading & taking my own classes all the\n            while brought into perspective what it means for 25+ students to\n            rely on me. Breaking up large tasks into manageable bits as well as\n            prioritizing high value tasks helped me be a dedicated TA and a\n            student\n          </ListItem>\n          <ListItem>\n            <strong>Communication</strong> ended up being the biggest takeway\n            for me: Each week, I had about 5 hours of meetings (& section) that\n            I has to present to. Explaining difficult concepts, problems &\n            solutions started off as a big challenge but making good use of the\n            resources avaialable to me really helped me break through the\n            barrier. Communication has stuck with me as I start interviewing for\n            internships and full time jobs in industry, by breaking down large\n            problems and thinking through them step by step\n          </ListItem>\n          <ListItem>\n            Being part of one of the most tight knight and amazing{' '}\n            <strong>community</strong> has given me friends for life. Getting to\n            know other TAs and instructors personally has been such a rewarding\n            experience. From just knowing TAs through classes and meeting them a\n            couple times a week, our community has progressed to hours of\n            complaining in the library, catching up over pizza parties, game\n            nights & going on adventures!\n          </ListItem>\n        </UnorderedList>\n      </ModalBody>\n      <Image mt={10} mx=\"auto\" src={ta} maxW=\"40%\" />\n    </Box>\n  );\n};\n\nexport default TA;\n","import React from 'react';\nimport { Box, UnorderedList, ListItem, ModalBody } from '@chakra-ui/react';\n\nconst EY = () => {\n  return (\n    <Box mt={2}>\n      <ModalBody>\n        Exploring this neoteric technology-oriented world, I realize the power\n        of algorithmic thinking is driving society. During the summer of 2019, I\n        worked at Ernst & Young, where I combined algorithms and deep learning\n        to develop a full-stack Tax FAQ Bot:\n        <br />\n        <br />\n        <UnorderedList as=\"ul\" px={10}>\n          <ListItem>\n            Worked on building supervised machine learning models for question\n            answering tasks with dual attention LSTM models\n          </ListItem>\n          <ListItem>\n            Member of a team that built a deep learning tax bot to facilitate\n            tax advising. Trained & developed a model to answer internal tax\n            related questions\n          </ListItem>\n          <ListItem>\n            Created & maintained a platform for tax analytics and recommendation\n            policies\n          </ListItem>\n        </UnorderedList>\n        <br />\n        Working long days and late nights, the experience I gained over summer\n        prepared and enthralled me to live in this data-centric world:\n        <br />\n        <br />\n        <UnorderedList as=\"ul\" px={10}>\n          <ListItem>\n            I was exposed to multiple <strong>real-world problems</strong>: The\n            idea of using technnology and softare for the betterment of\n            community was brought out by examining the implications software had\n            on society. Seeing the positive impact for someone using products we\n            wrote transformed my motivation behind building codebases. It showed\n            me how problems are solved at the intersection of technology and\n            people\n          </ListItem>\n          <ListItem>\n            I learned what it meant to be a <strong>\"software engineer\"</strong>{' '}\n            in a business by deploying software and working in tandem with\n            multiple teams: Every commit had to be thoroughly checked & ready\n            for production, every idea had to be brainstormed within the team.\n            This pipeline structure developed my understanding of tackling large\n            problems and making sure that the best version of a product is\n            shipped out to consumers.\n          </ListItem>\n        </UnorderedList>\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default EY;\n","import React from 'react';\nimport { Box, UnorderedList, ListItem, ModalBody } from '@chakra-ui/react';\n\nconst Robotics = () => {\n  return (\n    <Box mt={2}>\n      <ModalBody>\n        Entering college, I joined the Husky Robotics community, whose goal is\n        to bring the unreachable a little closer, aligned with my own interests.\n        In a journey to create a fully funvtional Mars Rover prototype, I\n        learned the value of having a tight-knit community to ensure the success\n        of the team, as individuals themselves strive to build on their\n        experiences and failures. As a member of the community, I:\n        <br />\n        <br />\n        <UnorderedList as=\"ul\" px={10}>\n          <ListItem>\n            Created embedded systems framework, programming microprocessor\n            boards to control parts such as the chassis, arms & legs\n          </ListItem>\n          <ListItem>\n            Developed movement abilities such as forward & inverse kinematics by\n            integrating computer vision\n          </ListItem>\n        </UnorderedList>\n        <br />\n        This experience helped me get more comfortable to explore computing to\n        try and directly better design these systems. Although I faced a steep\n        learning curve with a high time commitment, and continuous pressure, I\n        could see myself <strong>deliberating</strong> constantly on the\n        practicality and feasibility of my ideas rather than directly jumping\n        into trying new things. I learned to work within a team and with the\n        support of my team, we successfully built a Mars Rover prototype for the\n        university rover challenge. t\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default Robotics;\n","import React from 'react';\nimport { Box, UnorderedList, ListItem, ModalBody } from '@chakra-ui/react';\n\nconst MuSigma = () => {\n  return (\n    <Box>\n      <ModalBody>\n        Through highschool I lived in the sprawling metropolis of Bangalore,\n        India, which has grown over 40% in the last decade and is now considered\n        the silicon valley of India. Originally named the garden city, the area\n        was filled with pensioners and retired homes but the IT boom has made it\n        the supergiant that it is now. Bangalore has been chasing growth,\n        focusing on the end rather than as a means to an end, and this has\n        created a plethora of problems like housing, population explosion,\n        traffic and water pollution. Moreover just like those of the companies,\n        there are no standard solution to these problems and hence organizations\n        need to start challenging conventional thought. I got exposed to problem\n        solving in an innovative approach during my summer internship at Mu\n        Sigma, one of the world’s largest pure play decision sciences companies.\n        Working on solving these problems bit by bit, I built a classification\n        model to detect automobile insurance fraud with 85% accuracy that was\n        predicted to generate a $2M increase in annual revenue. What I learnt\n        beyond solving specific problems is the Art of problem solving under 3\n        guiding principles viz.\n        <br />\n        <br />\n        <UnorderedList as=\"ul\" px={10}>\n          <ListItem>\n            <strong> Learning is more critical than knowing</strong>: I had very\n            little contact with computing and data science going into Mu Sigma,\n            but I got more from this experience than any other internship,\n            because it started me on a path to computing.\n          </ListItem>\n          <ListItem>\n            <strong>The new IP is interdisciplinary perspective</strong>:\n            Getting into this totally new domain, synthesizing data and\n            information was paramount. This forced me to look at a\n            multidisciplinary form of learning and bear these different insights\n            to examine complex problems\n          </ListItem>\n          <ListItem>\n            <strong>Questions are more important than answers</strong>: This\n            foundational principle shapes the programmer I am today. Coming from\n            an engineering background, I was always taught to ask questions and\n            work through them to figure out my own answer. Google is at a\n            fingertip in this data centric world, but the reward of coming to a\n            solution in my own way has always been the biggest gift\n          </ListItem>\n        </UnorderedList>\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default MuSigma;\n","export default __webpack_public_path__ + \"static/media/CodeItLanding.9262cfdc.png\";","export default __webpack_public_path__ + \"static/media/Settings.52a0a683.png\";","export default __webpack_public_path__ + \"static/media/SignUp.89473510.png\";","export default __webpack_public_path__ + \"static/media/Courses.62eb8393.png\";","export default __webpack_public_path__ + \"static/media/Banner.3e6e2e18.png\";","import React from 'react';\nimport {\n  Box,\n  UnorderedList,\n  ListItem,\n  ModalBody,\n  Image,\n  Button,\n  Link,\n  HStack,\n  useColorModeValue,\n  Code,\n  Heading,\n} from '@chakra-ui/react';\n\nimport { BsFileEarmarkCode } from 'react-icons/bs';\nimport { FaGooglePlay, FaAppStore } from 'react-icons/fa';\nimport CodeItLanding from '../../images/CodeItLanding.png';\nimport Settings from '../../images/Settings.png';\nimport SignUp from '../../images/SignUp.png';\nimport Courses from '../../images/Courses.png';\nimport Banner from '../../images/Banner.png';\n\nconst CodeIt = () => {\n  const firstColor = useColorModeValue('red', 'yellow');\n  return (\n    <Box mt={2}>\n      <ModalBody>\n        <Button\n          leftIcon={<FaGooglePlay />}\n          colorScheme={firstColor}\n          size=\"lg\"\n          mr={5}\n        >\n          <Link\n            isExternal={true}\n            _hover={{ textDecor: 'none' }}\n            as=\"a\"\n            href=\"https://play.google.com/store/apps/details?id=com.trainthem\"\n          >\n            Download Now (PlayStore)\n          </Link>\n        </Button>\n        <Button\n          leftIcon={<FaAppStore />}\n          colorScheme={firstColor}\n          size=\"lg\"\n          mr={5}\n        >\n          <Link\n            isExternal={true}\n            _hover={{ textDecor: 'none' }}\n            as=\"a\"\n            href=\"https://apps.apple.com/us/app/code-it/id1530425905\"\n          >\n            Download Now (App Store)\n          </Link>\n        </Button>\n        <Button leftIcon={<BsFileEarmarkCode />} colorScheme=\"blue\" size=\"lg\">\n          <Link\n            _hover={{ textDecor: 'none' }}\n            as=\"a\"\n            href=\"https://github.com/tusharpoddar/TrainThem\"\n            isExternal={true}\n          >\n            View Source Code\n          </Link>\n        </Button>\n        <br />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Development Frameworks:\n        </Heading>\n        <Code children=\"React Native\" mr={2} />\n        <Code children=\"Java\" mr={2} />\n        <Code children=\"Swift\" />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Design Frameworks:\n        </Heading>\n        <Code children=\"Figma\" />\n        <br />\n        <br />\n        Starting to explore the neoteric world of web design and app\n        development, I wanted to create content that was not only interesting\n        but also aligned with my goals of improving computer science pedagogy\n        and inclusivity through a school level.{' '}\n        <b>\n          <i>Code.it</i>\n        </b>{' '}\n        was born from this vision of augmenting the level of computational\n        education, deployed to empower underprivileged students by providing\n        free CS education. The app is targeted towards middle & high schoolers\n        offering courses in multiple programming languages (Python, Java, HTML,\n        CSS, JavaScript). We are unique and differentiate ourselves from other\n        platforms like KhanAcademy, Coursera, edX by:\n        <br />\n        <br />\n        <UnorderedList pl={10}>\n          <ListItem>\n            Working specifically with less fortunate schools to promote computer\n            science specific learning\n          </ListItem>\n          <ListItem>\n            Providing <i>free</i> computer science education with a 24 hour\n            continuous form\n          </ListItem>\n          <ListItem>\n            Lectures are <i>live</i> with an instructor for specific student\n            groups\n          </ListItem>\n        </UnorderedList>\n        <br />\n        Our design principles were focused on simplicity, but have important\n        interactive elements that hook users and keep them interested in the\n        flow. Designed in React Native, this app supports cross platform use and\n        hence increases access for everyone.\n        <HStack maxW=\"25%\" mt={5}>\n          <Image src={CodeItLanding} />\n          <Image src={Settings} />\n          <Image src={SignUp} />\n          <Image src={Courses} />\n        </HStack>\n        <Image mx=\"auto\" mt={10} maxW=\"60%\" src={Banner} />\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default CodeIt;\n","export default __webpack_public_path__ + \"static/media/autocomplete-web.4b312c12.png\";","import React from 'react';\nimport {\n  Box,\n  ModalBody,\n  Image,\n  Button,\n  Link,\n  useColorModeValue,\n  Code,\n  Heading,\n} from '@chakra-ui/react';\n\nimport { BsPlay, BsFileEarmarkCode, BsNewspaper } from 'react-icons/bs';\n\nimport Autocomplete from '../../images/autocomplete-web.png';\n\nconst Webapps = () => {\n  const firstColor = useColorModeValue('red', 'yellow');\n  const secondColor = useColorModeValue('blue.600', 'yellow.200');\n  return (\n    <Box mt={2}>\n      <ModalBody>\n        <Button leftIcon={<BsNewspaper />} colorScheme=\"teal\" size=\"lg\" mr={5}>\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://arxiv.org/abs/2010.04671\"\n            isExternal={true}\n          >\n            Research Paper\n          </Link>\n        </Button>\n        <Button leftIcon={<BsPlay />} colorScheme={firstColor} size=\"lg\" mr={5}>\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://autocomplete-me.herokuapp.com/\"\n            isExternal={true}\n          >\n            Try Now\n          </Link>\n        </Button>\n        <Button leftIcon={<BsFileEarmarkCode />} colorScheme=\"blue\" size=\"lg\">\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://github.com/kevinlin1/nifty-web-apps\"\n            isExternal={true}\n          >\n            View Source Code\n          </Link>\n        </Button>\n        <br />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Development Frameworks:\n        </Heading>\n        <Code children=\"AMP\" mr={2} />\n        <Code children=\"React.js\" mr={2} />\n        <Code children=\"HTML\" mr={2} />\n        <Code children=\"CSS\" />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Design Frameworks:\n        </Heading>\n        <Code children=\"Figma\" />\n        <br />\n        <br />\n        Over Summer, I worked with professor{' '}\n        <Link\n          color={secondColor}\n          as=\"a\"\n          href=\"https://kevinl.info/\"\n          isExternal={true}\n        >\n          Kevin Lin\n        </Link>{' '}\n        to develop more interactive webapps for text-based programming\n        assessments. All of the take assignments for the introductory computer\n        science series that we currently support have largely text-based\n        specifications with low student interactivity. This paper goes into the\n        process of connecting student written code to a simple front end\n        interface that dynamically responds to user interactions. Since all of\n        the front end visualizations are based on AMP and direct HTML, we have\n        standarized templates for developing these apps. Instructors and\n        students alike can run and modify these web apps on their own computers\n        or deploy their apps online for access from any smart device at no cost.\n        The tutorial presents examples from CS1 and CS2 courses in Python and\n        Java, but the ideas apply generally. We are presenting this work at{' '}\n        <Link\n          color={secondColor}\n          as=\"a\"\n          href=\"https://sigcse2021.sigcse.org/\"\n          isExternal={true}\n        >\n          SIGCSE 2021\n        </Link>\n        !\n        <Image src={Autocomplete} mt={5} maxW=\"80%\" mx=\"auto\" />\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default Webapps;\n","import React from 'react';\nimport {\n  Box,\n  ModalBody,\n  Button,\n  Link,\n  useColorModeValue,\n  Heading,\n  Code,\n  UnorderedList,\n  ListItem,\n} from '@chakra-ui/react';\nimport { BsPlay, BsFileEarmarkCode } from 'react-icons/bs';\n\nconst Linter = props => {\n  const firstColor = useColorModeValue('red', 'yellow');\n  const secondColor = useColorModeValue('blue.600', 'yellow.200');\n  return (\n    <Box mt={2} {...props}>\n      <ModalBody>\n        <Button\n          mr={5}\n          leftIcon={<BsFileEarmarkCode />}\n          colorScheme=\"blue\"\n          size=\"lg\"\n        >\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://github.com/sumantguha/Java-Style-Checker\"\n            isExternal={true}\n          >\n            View Source Code\n          </Link>\n        </Button>\n        <Button\n          leftIcon={<BsPlay />}\n          colorScheme={firstColor}\n          size=\"lg\"\n          disabled={true}\n        >\n          Try Now (Coming Soon!)\n        </Button>\n        <br />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Development Frameworks:\n        </Heading>\n        <Code children=\"Python\" mr={2} />\n        <Code children=\"React.js\" mr={2} />\n        <Code children=\"Flask\" mr={2} />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Design Frameworks:\n        </Heading>\n        <Code children=\"Figma\" />\n        <br />\n        <br />\n        Designed specifically for the introductory computer science series at\n        the University of Washington, I worked to develop a Java specific code\n        quality linter (similar to{' '}\n        <Link\n          color={secondColor}\n          as=\"a\"\n          href=\"https://pep8.readthedocs.io/en/release-1.7.x/\"\n          isExternal={true}\n        >\n          pep8\n        </Link>\n        ). The linter parses <Code>.java</Code> files to find stylystic errors\n        in a program and gives users a report of these errors with suggestions\n        on fixing them. There is a corresponding text based checker for the\n        webapp to display results on a student interface for ease of grading.\n        The goal of such a style checker is to ensure that code aligns with our\n        specific{' '}\n        <Link\n          color={secondColor}\n          as=\"a\"\n          href=\"https://courses.cs.washington.edu/courses/cse142/20au/quality.html\"\n          isExternal={true}\n        >\n          code quality guide\n        </Link>\n        . This in turn enforces:\n        <br />\n        <br />\n        <UnorderedList pl={10}>\n          <ListItem>\n            Consistent stylstic practices amongst the large (~900 person) class\n          </ListItem>\n          <ListItem>\n            Accurate style conventions from the{' '}\n            <Link\n              color={secondColor}\n              as=\"a\"\n              href=\"https://docs.oracle.com/javase/specs/\"\n              isExternal={true}\n            >\n              Java Lanuage Specification\n            </Link>{' '}\n            to maintain across industry\n          </ListItem>\n        </UnorderedList>\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default Linter;\n","import React from 'react';\nimport { Box, ModalBody, Heading } from '@chakra-ui/react';\n\nconst Ed = () => {\n  return (\n    <Box>\n      <ModalBody>\n        The introductory computer science courses at the University of\n        Washington shifted from using GradeIt as their primary grading platform\n        to Ed instead.\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default Ed;\n","import React from 'react';\nimport {\n  Box,\n  ModalBody,\n  Button,\n  Heading,\n  Link,\n  Code,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { BsPlay, BsFileEarmarkCode } from 'react-icons/bs';\n\nconst Maps = () => {\n  const firstColor = useColorModeValue('red', 'yellow');\n  const secondColor = useColorModeValue('blue.600', 'yellow.200');\n  return (\n    <Box>\n      <ModalBody>\n        <Button mr={5} leftIcon={<BsPlay />} colorScheme={firstColor} size=\"lg\">\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://github.com/sumantguha/Java-Style-Checker\"\n            isExternal={true}\n          >\n            Try Now\n          </Link>\n        </Button>\n        <Button leftIcon={<BsFileEarmarkCode />} colorScheme=\"blue\" size=\"lg\">\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://github.com/sumantguha/Java-Style-Checker\"\n            isExternal={true}\n          >\n            View Source Code\n          </Link>\n        </Button>\n        <br />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Development Frameworks:\n        </Heading>\n        <Code children=\"Java\" mr={2} />\n        <br />\n        <br />\n        For my datastructures and algorithms coursework, I developed HuskyMaps,\n        a map visualization (similar to google maps) specific to the University\n        of Washington. It uses data about the university campus to plot out the\n        entire university and can give directions between any two points of the\n        campus. It computes distances between the different buildings on campus\n        and acts as a simple front end interface for studets and faculty. It\n        covers more than a standard google maps search within the university\n        because it has a more accurate representation of different buildings. It\n        was very interesting to develop this full stack implementation of the\n        map service, because it required me to work with multiple (Java)\n        frameworks and more importantly, design efficient algorithms at scale.\n        To determine the shortest path between any two buildings/points within\n        campus, an efficient implementation of A* graph search was integrated.\n        The entire grid of buildings was represented as a large graph and hence\n        searching was fairly inexpensive over this structure. To interface with\n        the front-end, we needed to keep track of the exact point that users'\n        clicked, which was done through KD Trees. Overall, multiple algorithms\n        were used within this application to ensure efficient computation and\n        fast response time\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default Maps;\n","export default __webpack_public_path__ + \"static/media/oldportfolio.9091e62e.png\";","import React from 'react';\nimport {\n  Box,\n  ModalBody,\n  Button,\n  Heading,\n  Link,\n  Code,\n  Image,\n} from '@chakra-ui/react';\nimport { BsFileEarmarkCode } from 'react-icons/bs';\nimport OldPortfolio from '../../images/oldportfolio.png';\n\nconst Portfolio = props => {\n  return (\n    <Box {...props}>\n      <ModalBody>\n        <Button leftIcon={<BsFileEarmarkCode />} colorScheme=\"blue\" size=\"lg\">\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://github.com/sumantguha/portfolio\"\n            isExternal={true}\n          >\n            View Source Code\n          </Link>\n        </Button>\n        <br />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Design Frameworks:\n        </Heading>\n        <Code children=\"Figma\" mr={2} />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Development Frameworks:\n        </Heading>\n        <Code children=\"React.js\" mr={2} />\n        <br />\n        <br />\n        An older version of this website! Not hosted anywhere but feel free to\n        look through the source code. Designed natively in{' '}\n        <Code children=\"React.js\" /> with Bootstrap 4 and UI kits.\n        <br />\n        <br />\n        <Image src={OldPortfolio} />\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default Portfolio;\n","import React from 'react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Text,\n  Button,\n  Divider,\n  useColorModeValue,\n} from '@chakra-ui/react';\n\nimport TA from '../Pages/Experience/ta';\nimport EY from '../Pages/Experience/ey';\nimport Robotics from '../Pages/Experience/robotics';\nimport MuSigma from '../Pages/Experience/musigma';\n\nimport CodeIt from '../Pages/Projects/codeit';\nimport Webapps from '../Pages/Projects/webapps';\nimport Linter from '../Pages/Projects/linter';\nimport Ed from '../Pages/Projects/ed';\nimport Maps from '../Pages/Projects/maps';\nimport Portfolio from '../Pages/Projects/portfolio2';\n\nconst pageHandler = {\n  'CSE 14x Head Teaching Assistant': <TA />,\n  'Machine Learning Intern': <EY />,\n  'Code.it': <CodeIt />,\n  'Nifty Web Apps': <Webapps />,\n  'Java Code Quality Linter': <Linter />,\n  'Course Data Migration': <Ed />,\n  'Husky Maps': <Maps />,\n  'Portfolio version 2': <Portfolio />,\n  'Embedded Systems Programmer': <Robotics />,\n  'Data Analytics Intern': <MuSigma />,\n};\n\nconst ContentModal = ({\n  props,\n  onClose,\n  isOpen,\n  title,\n  description,\n  start,\n  end,\n}) => {\n  const bg = useColorModeValue('white', 'gray.900');\n  return (\n    <Modal\n      {...props}\n      onClose={onClose}\n      size=\"6xl\"\n      isOpen={isOpen}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      scrollBehavior=\"inside\"\n    >\n      <ModalOverlay />\n      <ModalOverlay />\n      <ModalContent bg={bg}>\n        <ModalHeader fontSize=\"5xl\" fontWeight={700}>\n          {title}\n          <Text\n            fontSize=\"md\"\n            textTransform=\"uppercase\"\n            letterSpacing=\"0.2rem\"\n            mt={1}\n          >\n            {description === undefined ? '' : `${description} |`} {start}{' '}\n            {end === null ? '' : `- ${end}`}\n          </Text>\n        </ModalHeader>\n        <Divider colorScheme=\"blue\" orientation=\"horizontal\" />\n\n        <ModalCloseButton />\n        <ModalBody fontWeight={400}>{pageHandler[title]}</ModalBody>\n        <ModalFooter>\n          <Button onClick={onClose}>Close</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ContentModal;\n","import React from 'react';\nimport {\n  Box,\n  useDisclosure,\n  Image,\n  Heading,\n  Icon,\n  Badge,\n  useColorModeValue,\n  keyframes,\n  usePrefersReducedMotion,\n} from '@chakra-ui/react';\n\nimport { FaChevronCircleRight } from 'react-icons/fa';\n\nimport ContentModal from './ContentModal';\n\nconst blink = keyframes`\n  50% {\n    opacity: 0.0;\n  }`;\n\nconst Card = ({\n  mr,\n  mb,\n  name,\n  start,\n  end,\n  description,\n  image,\n  size,\n  descriptionSize,\n  newPost,\n}) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleOpen = () => {\n    onOpen();\n  };\n\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  const animation = prefersReducedMotion\n    ? undefined\n    : `${blink} infinite 1s ease`;\n\n  const scheme = useColorModeValue('purple', 'yellow');\n  return (\n    <Box>\n      <Box\n        mr={mr}\n        mb={mb}\n        transition=\"0.3s\"\n        _hover={{ transform: 'scale(1.05)', transition: '0.3s' }}\n        _active={{ transform: 'scale(0.95)', transition: '0.1s' }}\n      >\n        <Box\n          onClick={handleOpen}\n          role=\"group\"\n          position=\"relative\"\n          textAlign=\"left\"\n          color=\"white\"\n        >\n          <Image\n            w=\"100%\"\n            _groupHover={{ filter: 'brightness(0.3)' }}\n            borderRadius={20}\n            src={image}\n          />\n          <Box position=\"absolute\" w=\"100%\" top={7}>\n            {newPost && (\n              <Badge\n                float=\"right\"\n                mr={7}\n                fontSize=\"md\"\n                colorScheme={scheme}\n                fontWeight={700}\n                visibility=\"hidden\"\n                _groupHover={{ visibility: 'visible' }}\n              >\n                New\n              </Badge>\n            )}\n          </Box>\n          <Box p=\"7\" fontSize=\"5xl\" position=\"absolute\" top={0} left={0}>\n            <Heading\n              className=\"head\"\n              textTransform=\"uppercase\"\n              letterSpacing=\"0.2rem\"\n              fontSize={descriptionSize}\n              fontWeight=\"300\"\n            >\n              {start} {end === null ? '' : `- ${end}`}\n            </Heading>\n            <Heading pt=\"2\" fontSize={size}>\n              {name}\n            </Heading>\n            <Heading\n              pt={size === '5xl' ? 4 : 3}\n              textTransform=\"uppercase\"\n              letterSpacing=\"0.2rem\"\n              fontSize={descriptionSize}\n              fontWeight=\"300\"\n            >\n              {description}\n            </Heading>\n\n            <Heading\n              py={7}\n              letterSpacing=\"0.1rem\"\n              fontSize={descriptionSize}\n              visibility=\"hidden\"\n              _groupHover={{ visibility: 'visible' }}\n            >\n              Learn More{' '}\n              <Icon\n                lineHeight=\"xl\"\n                animation={animation}\n                as={FaChevronCircleRight}\n              />\n            </Heading>\n          </Box>\n        </Box>\n      </Box>\n      <ContentModal\n        mx={10}\n        onClose={onClose}\n        isOpen={isOpen}\n        title={name}\n        description={description}\n        start={start}\n        end={end}\n      />\n    </Box>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Box, SimpleGrid } from '@chakra-ui/react';\nimport tt from '../images/tt.svg';\nimport webapps from '../images/webapps.svg';\nimport gradeit from '../images/gradeit.svg';\nimport maps from '../images/maps.svg';\nimport insurance from '../images/insurance.svg';\nimport message from '../images/message.svg';\nimport portfolio1 from '../images/portfolio1.svg';\nimport portfolio2 from '../images/portfolio2.svg';\n\nimport Header from '../Components/Header';\nimport Card from '../Components/Card';\n\nconst Projects = props => {\n  return (\n    <Box id=\"projects\" {...props}>\n      <Header description=\"case studies\" title=\"Projects\" />\n\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <SimpleGrid\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          columns={{ sm: 1, md: 2 }}\n          px=\"20\"\n          pt=\"10\"\n          maxW=\"100%\"\n          mx=\"auto\"\n        >\n          <Card\n            mr={20}\n            mb={20}\n            name=\"Code.it\"\n            description=\"HighSchool Education Platform\"\n            start=\"2020\"\n            end=\"Present\"\n            image={tt}\n            size=\"4xl\"\n            height={500}\n            descriptionSize=\"lg\"\n            newPost={true}\n          />\n\n          <Card\n            mr={20}\n            mb={20}\n            name=\"Nifty Web Apps\"\n            description=\"Build web apps for any programming assignment\"\n            start=\"2020\"\n            end=\"Present\"\n            image={webapps}\n            size=\"4xl\"\n            height={500}\n            descriptionSize=\"lg\"\n            newPost={true}\n          />\n        </SimpleGrid>\n\n        <SimpleGrid columns={{ sm: 1, md: 3 }} px=\"20\" maxW=\"100%\">\n          <Card\n            mr={5}\n            mb={5}\n            name=\"Java Code Quality Linter\"\n            description=\"Web/Text Checker\"\n            start=\"2020\"\n            end=\"Present\"\n            image={insurance}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n            newPost={true}\n          />\n\n          {/* <Card\n            mr={5}\n            mb={5}\n            name=\"Course Data Migration\"\n            description=\"Writing jUnit tests\"\n            start=\"2020\"\n            end=\"Present\"\n            image={gradeit}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          /> */}\n\n          <Card\n            mr={5}\n            mb={5}\n            name=\"Husky Maps\"\n            description=\"Interactive Map Viz\"\n            start=\"2019\"\n            end=\"2020\"\n            image={maps}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          />\n\n          {/* <Card\n            mr={5}\n            mb={5}\n            name=\"Talkly\"\n            description=\"Reactive Message Platform\"\n            start=\"2020\"\n            end=\"Present\"\n            image={message}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          /> */}\n\n          <Card\n            mr={5}\n            mb={5}\n            name=\"Portfolio version 2\"\n            description=\"My old portfolio website\"\n            start=\"2020\"\n            end=\"Present\"\n            image={portfolio1}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          />\n\n          {/* <Card\n            mr={5}\n            mb={5}\n            name=\"Portfolio version 1\"\n            description=\"My old portfolio website\"\n            start=\"2019\"\n            end=\"2020\"\n            image={portfolio2}\n            size=\"2xl\"\n            height={500}\n            descriptionSize=\"md\"\n          /> */}\n        </SimpleGrid>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Projects;\n","export default __webpack_public_path__ + \"static/media/teaching.b536164a.svg\";","export default __webpack_public_path__ + \"static/media/ml.f03a9140.svg\";","export default __webpack_public_path__ + \"static/media/r.c86f12f1.svg\";","export default __webpack_public_path__ + \"static/media/data.9a8d656a.svg\";","import React from 'react';\nimport { Box, Flex } from '@chakra-ui/react';\n\nimport Header from '../Components/Header';\nimport Card from '../Components/Card';\n\nimport ta from '../images/teaching.svg';\nimport ey from '../images/ml.svg';\nimport robot from '../images/r.svg';\nimport data from '../images/data.svg';\n\nconst Experience = props => {\n  return (\n    <Box id=\"experience\" {...props}>\n      <Header description=\"where i've worked\" title=\"Work Experience\" />\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        columns={{ sm: 1, md: 2 }}\n        px=\"20\"\n        pt=\"10\"\n        maxW=\"100%\"\n        mx=\"auto\"\n        flexWrap=\"wrap\"\n      >\n        <Card\n          mr={20}\n          mb={20}\n          name=\"CSE 14x Head Teaching Assistant\"\n          start=\"2020\"\n          end=\"Present\"\n          description=\"University of Washington\"\n          image={ta}\n          size=\"5xl\"\n          height={700}\n          descriptionSize=\"xl\"\n        />\n        <Card\n          mb={20}\n          name=\"Machine Learning Intern\"\n          start=\"2019\"\n          end={null}\n          description=\"Ernst & Young\"\n          image={ey}\n          size=\"5xl\"\n          height={700}\n          descriptionSize=\"xl\"\n        />\n\n        <Card\n          mr={20}\n          mb={20}\n          name=\"Embedded Systems Programmer\"\n          start=\"2018\"\n          end=\"2019\"\n          description=\"Husky Robotics\"\n          image={robot}\n          size=\"5xl\"\n          height={700}\n          descriptionSize=\"xl\"\n        />\n        <Card\n          mb={20}\n          name=\"Data Analytics Intern\"\n          start=\"2018\"\n          end={null}\n          description=\"Mu Sigma\"\n          image={data}\n          size=\"5xl\"\n          height={700}\n          descriptionSize=\"xl\"\n        />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Experience;\n","export default __webpack_public_path__ + \"static/media/workingLight.42c91473.svg\";","export default __webpack_public_path__ + \"static/media/workingDark.dbb5bb7a.svg\";","import React from 'react';\nimport {\n  Box,\n  SimpleGrid,\n  Text,\n  Image,\n  Center,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport Header from '../Components/Header';\n\nimport workingLight from '../images/workingLight.svg';\nimport workingDark from '../images/workingDark.svg';\n\nconst AboutMe = ({ props, scrollRef }) => {\n  const image = useColorModeValue(workingLight, workingDark);\n  return (\n    <Box id=\"about\" w=\"100%\" ref={scrollRef} {...props}>\n      <SimpleGrid h=\"100vh\" pt=\"20\" columns={{ sm: 1, md: 2 }} spacing={10}>\n        <Box>\n          <Header description=\"learn more\" title=\"About Me\" />\n          <Text\n            marginLeft=\"20\"\n            mt=\"10\"\n            maxW=\"80%\"\n            fontSize=\"lg\"\n            fontWeight={300}\n          >\n            Hello 👋 I'm Sumant, a 20 year old undergraduate student based out\n            of Seattle, Washington. Welcome to my slice of the web 😀 <br />{' '}\n            <br />\n            I am a junior studying electrical and computer engineering at the\n            University of Washington. Passionate about promoting inclusive\n            education and computational literacy, I work as a head teaching\n            assistant at the Paul G Allen School of Computer Science and\n            Engineering for the introductory computer science series. Teaching\n            has been one of the rewarding part of my college experience yet!\n            <br /> <br /> I work on a variety of projects across multiple\n            platforms such as: Python, React, Java, ReactNative, JavaScript,\n            HTML, CSS and C++. Take a look at some of my projects below to see\n            my work 💻\n          </Text>\n        </Box>\n        <Center marginRight=\"20\" maxW=\"80%\" maxH=\"80%\">\n          <Image src={image} />\n        </Center>\n      </SimpleGrid>\n    </Box>\n  );\n};\n\nexport default AboutMe;\n","export default __webpack_public_path__ + \"static/media/Resume.371fd6e2.pdf\";","import React, { useState } from 'react';\nimport {\n  Flex,\n  Center,\n  useColorModeValue,\n  Spacer,\n  Button,\n  Link,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  useDisclosure,\n  Box,\n} from '@chakra-ui/react';\n\nimport PDF from 'react-pdf-js';\n\nimport Resume from '../Resume.pdf';\n\nimport { ColorModeSwitcher } from '../App.js';\n\nconst Navbar = props => {\n  const bg = useColorModeValue('blue.600', 'yellow.200');\n  const color = useColorModeValue('gray.900', 'gray.50');\n\n  const modalbg = useColorModeValue('white', 'gray.900');\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [page, setPage] = useState(1);\n  const [pages, setPages] = useState(null);\n  const onDocumentError = err => {\n    console.error('pdf viewer error:', err);\n  };\n  const onDocumentComplete = numPages => {\n    setPages(numPages);\n  };\n\n  return (\n    <Flex px=\"20\" py=\"10\" w=\"100%\" {...props}>\n      <Button\n        fontSize=\"xl\"\n        fontWeight=\"700\"\n        mr={10}\n        transition=\"0.3s\"\n        _hover={{ transform: 'scale(1.05)', transition: '0.3s' }}\n        variant=\"outline\"\n        borderWidth=\"2px\"\n        borderColor={bg}\n        size=\"md\"\n        color={color}\n        onClick={onOpen}\n      >\n        Resume\n      </Button>\n      <Spacer />\n      <Center>\n        <Link\n          href=\"#about\"\n          color={color}\n          fontSize=\"2xl\"\n          fontWeight={700}\n          mr={10}\n        >\n          About\n        </Link>\n        <Link\n          href=\"#projects\"\n          color={color}\n          fontSize=\"2xl\"\n          fontWeight={700}\n          mr={10}\n        >\n          Projects\n        </Link>\n        <Link\n          href=\"#experience\"\n          color={color}\n          fontSize=\"2xl\"\n          fontWeight={700}\n          mr={10}\n        >\n          Work\n        </Link>\n        <ColorModeSwitcher />\n        <Modal\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          isOpen={isOpen}\n          onClose={onClose}\n        >\n          <ModalOverlay />\n          <ModalOverlay />\n          <ModalContent bg={modalbg}>\n            <PDF\n              file={Resume}\n              page={page}\n              onDocumentError={onDocumentError}\n              onDocumentComplete={onDocumentComplete}\n            />\n          </ModalContent>\n        </Modal>\n      </Center>\n    </Flex>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { IconButton } from '@chakra-ui/react';\n\nconst ButtonGroup = ({ props, bg, name }) => {\n  return (\n    <IconButton\n      transition=\"0.3s\"\n      _hover={{ transform: 'scale(1.2)', transition: '0.3s' }}\n      _active={{ transform: 'scale(0.9)', transition: '0.3s' }}\n      mt=\"10\"\n      size=\"lg\"\n      p=\"5\"\n      // colorScheme={bg}\n      fontSize=\"30px\"\n      icon={name}\n      mr=\"2rem\"\n      variant=\"ghost\"\n      borderWidth=\"2px\"\n      borderColor={bg}\n      color={bg}\n      {...props}\n    />\n  );\n};\n\nexport default ButtonGroup;\n","import React from 'react';\nimport {\n  useColorModeValue,\n  Box,\n  Heading,\n  Text,\n  Fade,\n  Collapse,\n} from '@chakra-ui/react';\nimport ButtonGroup from '../Components/ButtonGroup';\n\nimport {\n  FaFacebookF,\n  FaLinkedinIn,\n  FaGithub,\n  FaMailBulk,\n} from 'react-icons/fa';\n\nconst IntroSection = ({ heading, buttons }) => {\n  const color = useColorModeValue('blue.600', 'yellow.200');\n  const highlightColor = useColorModeValue('red.500', 'blue.200');\n  return (\n    <Box>\n      <Box maxW=\"100%\" pl={20} ml={10} pr={20} mr={10} textAlign=\"center\">\n        <Collapse startingHeight={20} in={heading}>\n          <Box mb=\"4\">\n            <Heading fontSize=\"8xl\" color={color}>\n              Creating and developing{' '}\n              <Text display=\"inline-block\" color={highlightColor}>\n                high quality\n              </Text>{' '}\n              content for the internet world\n            </Heading>\n          </Box>\n        </Collapse>\n        <Fade in={heading}>\n          <Box mt=\"4\">\n            <Text\n              textTransform=\"uppercase\"\n              letterSpacing=\"0.2rem\"\n              fontSize=\"xl\"\n              fontWeight=\"400\"\n            >\n              Sumant Guha\n            </Text>\n          </Box>\n        </Fade>\n      </Box>\n      <Fade in={buttons}>\n        <Box w=\"100%\" textAlign=\"center\">\n          <ButtonGroup bg={color} name={<FaFacebookF />} />\n          <ButtonGroup bg={color} name={<FaLinkedinIn />} />\n          <ButtonGroup bg={color} name={<FaGithub />} />\n          <ButtonGroup bg={color} name={<FaMailBulk />} />\n        </Box>\n      </Fade>\n    </Box>\n  );\n};\n\nexport default IntroSection;\n","import React from 'react';\nimport { Box, Text } from '@chakra-ui/react';\n\nconst Footer = props => {\n  return (\n    <Box mx=\"auto\" w=\"100%\" {...props}>\n      <Box textAlign=\"center\" fontSize=\"xs\" fontWeight=\"300\">\n        <Text>Designed & developed by Sumant Guha</Text>\n        <Text>&copy; Crafted with ❤️ in Seattle</Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { DoubleBounce } from 'better-react-spinkit';\nimport { Box, Text, Center, useColorModeValue } from '@chakra-ui/react';\n\nconst Loader = props => {\n  const bg = useColorModeValue('gray.50', 'gray.900');\n  const color = useColorModeValue('#E53E3E', '#90CDF4');\n  return (\n    <Box\n      {...props}\n      bg={bg}\n      position=\"absolute\"\n      top={0}\n      left={0}\n      h=\"100vh\"\n      w=\"100%\"\n    >\n      <Center h=\"100%\" position=\"absolute\" mx=\"auto\" w=\"100%\">\n        <DoubleBounce size={100} color={color} />\n      </Center>\n      <Box position=\"absolute\" bottom={0} marginBottom=\"2%\" marginLeft=\"2%\">\n        <Text\n          fontWeight=\"200\"\n          fontSize=\"2rem\"\n          textTransform=\"uppercase\"\n          letterSpacing=\"0.1rem\"\n        >\n          Welcome,\n        </Text>\n        <Text fontWeight=\"700\" fontSize=\"4rem\">\n          Wait for a bit\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Loader;\n","import React, { useRef, useState, useEffect } from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  IconButton,\n  useColorMode,\n  useColorModeValue,\n  extendTheme,\n  Text,\n  Fade,\n} from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nimport Projects from './Pages/Projects';\nimport Experience from './Pages/Experience';\nimport AboutMe from './Pages/AboutMe';\nimport Navbar from './Components/Navbar';\nimport IntroSection from './Pages/IntroSection';\nimport Footer from './Components/Footer';\nimport AnimatedCursor from 'react-animated-cursor';\nimport Loader from './Pages/Loader';\n\nimport { CgMouse } from 'react-icons/cg';\n\nconst theme = extendTheme({\n  styles: {\n    global: props => ({\n      body: {\n        bg: mode('#F7FAFC', '#171923')(props),\n        color: mode('#171923', '#F7FAFC')(props),\n      },\n    }),\n  },\n});\n\nconst App = () => {\n  const myRef = useRef(null);\n  const [isHidden, setIsHidden] = useState('visible');\n  const [navbar, setNavbar] = useState(false);\n  const [bubbles, setBubbles] = useState(false);\n  const [intro, setIntro] = useState(false);\n  const [buttons, setButtons] = useState(false);\n\n  const disableScroll = () => {\n    let x = window.scrollX;\n    let y = window.scrollY;\n    window.onscroll = () => {\n      window.scrollTo(x, y);\n    };\n  };\n\n  const enableScroll = () => {\n    window.onscroll = () => {};\n  };\n\n  useEffect(() => {\n    disableScroll();\n    setInterval(() => {\n      enableScroll();\n      setIsHidden('none');\n    }, 2000);\n    setInterval(() => {\n      setNavbar(true);\n    }, 2250);\n    setInterval(() => {\n      setIntro(true);\n    }, 2750);\n    setInterval(() => {\n      setButtons(true);\n    }, 3250);\n    setInterval(() => {\n      setBubbles(true);\n    }, 4000);\n  }, []);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <AnimatedCursor\n        innerSize={25}\n        outerSize={20}\n        color=\"193, 11, 111\"\n        outerAlpha={0.2}\n        innerScale={0.7}\n        outerScale={2}\n      />\n      <Box>\n        <Box\n          m=\"0 auto 0 auto\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          maxW=\"100%\"\n          h=\"100vh\"\n          position=\"relative\"\n        >\n          <Box position=\"absolute\" bottom=\"2%\" mx=\"auto\" textAlign=\"center\">\n            <Fade in={bubbles}>\n              <IconButton\n                transition=\"0.3s\"\n                _hover={{ transform: 'scale(1.2)', transition: '0.3s' }}\n                icon={<CgMouse />}\n                variant=\"none\"\n                fontSize=\"1.5rem\"\n                onClick={() =>\n                  myRef.current.scrollIntoView({ behavior: 'smooth' })\n                }\n              />\n              <Text\n                fontSize=\"sm\"\n                fontWeight={600}\n                letterSpacing=\"0.05rem\"\n                textTransform=\"lowercase\"\n              >\n                Scroll Down\n              </Text>\n            </Fade>\n          </Box>\n\n          <Box width=\"100%\">\n            <IntroSection heading={intro} buttons={buttons} />\n\n            <Fade in={navbar}>\n              <Navbar position=\"absolute\" left=\"0\" top=\"0\" />\n            </Fade>\n          </Box>\n        </Box>\n        <AboutMe scrollRef={myRef} />\n        <Projects h=\"auto\" pb=\"20\" w=\"100%\" />\n\n        <Experience h=\"auto\" pb=\"20\" w=\"100%\" />\n        <Footer position=\"absolute\" h=\"auto\" left=\"0\" bottom=\"0\" pb={5} />\n      </Box>\n\n      <Loader display={isHidden} />\n    </ChakraProvider>\n  );\n};\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"3xl\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n// import 'focus-visible/dist/focus-visible';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}