{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sumant/Desktop/Chakra/app/src/ColorModeSwitcher.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useColorMode, useColorModeValue, IconButton, createStandaloneToast } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nconst useIsMount = () => {\n  _s();\n\n  const isMountRef = useRef(true);\n  useEffect(() => {\n    isMountRef.current = false;\n  }, []);\n  return isMountRef.current;\n};\n\n_s(useIsMount, \"0qXoaEnsCX1Hu4P4+DXslUBKwsw=\");\n\nexport const ColorModeSwitcher = props => {\n  _s2();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const icon = text === 'dark' ? 'Moon' : 'Sun';\n  const toast = createStandaloneToast();\n  const isMount = useIsMount(); // useEffect(() => {\n  //   if (isMount) {\n  //     toast({\n  //       position: 'bottom-left',\n  //       title: `Try out dark mode`,\n  //       description: `Click on the Sun at the top right of your screen`,\n  //       status: 'info',\n  //       duration: 5000,\n  //       isClosable: true,\n  //     });\n  //   } else {\n  //     toast({\n  //       position: 'bottom-left',\n  //       title: `Try out light mode`,\n  //       description: `Click on the Moon at the top right of your screen`,\n  //       status: 'info',\n  //       duration: 5000,\n  //       isClosable: true,\n  //     });\n  //   }\n  // });\n\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    size: \"md\",\n    fontSize: \"3xl\",\n    \"aria-label\": `Switch to ${text} mode`,\n    variant: \"ghost\",\n    color: \"current\",\n    onClick: toggleColorMode,\n    icon: /*#__PURE__*/_jsxDEV(SwitchIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this),\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ColorModeSwitcher, \"7kmFN27JUyR9tMYUiMBZB2zcPZ0=\", false, function () {\n  return [useColorMode, useColorModeValue, useColorModeValue, useIsMount];\n});\n\n_c = ColorModeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorModeSwitcher\");","map":{"version":3,"sources":["/Users/sumant/Desktop/Chakra/app/src/ColorModeSwitcher.js"],"names":["React","useEffect","useState","useRef","useColorMode","useColorModeValue","IconButton","createStandaloneToast","FaMoon","FaSun","useIsMount","isMountRef","current","ColorModeSwitcher","props","toggleColorMode","text","SwitchIcon","icon","toast","isMount"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SACEC,YADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,qBAJF,QAKO,kBALP;AAMA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,gBAA9B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,CAACC,OAAX,GAAqB,KAArB;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOD,UAAU,CAACC,OAAlB;AACD,CAND;;GAAMF,U;;AAQN,OAAO,MAAMG,iBAAiB,GAAGC,KAAK,IAAI;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAsBX,YAAY,EAAxC;AACA,QAAMY,IAAI,GAAGX,iBAAiB,CAAC,MAAD,EAAS,OAAT,CAA9B;AACA,QAAMY,UAAU,GAAGZ,iBAAiB,CAACG,MAAD,EAASC,KAAT,CAApC;AACA,QAAMS,IAAI,GAAGF,IAAI,KAAK,MAAT,GAAkB,MAAlB,GAA2B,KAAxC;AAEA,QAAMG,KAAK,GAAGZ,qBAAqB,EAAnC;AACA,QAAMa,OAAO,GAAGV,UAAU,EAA1B,CAPwC,CASxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,QAAQ,EAAC,KAFX;AAGE,kBAAa,aAAYM,IAAK,OAHhC;AAIE,IAAA,OAAO,EAAC,OAJV;AAKE,IAAA,KAAK,EAAC,SALR;AAME,IAAA,OAAO,EAAED,eANX;AAOE,IAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA,OAQMD;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA3CM;;IAAMD,iB;UACiBT,Y,EACfC,iB,EACMA,iB,EAIHK,U;;;KAPLG,iB","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  createStandaloneToast,\n} from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nconst useIsMount = () => {\n  const isMountRef = useRef(true);\n  useEffect(() => {\n    isMountRef.current = false;\n  }, []);\n  return isMountRef.current;\n};\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const icon = text === 'dark' ? 'Moon' : 'Sun';\n\n  const toast = createStandaloneToast();\n  const isMount = useIsMount();\n\n  // useEffect(() => {\n  //   if (isMount) {\n  //     toast({\n  //       position: 'bottom-left',\n  //       title: `Try out dark mode`,\n  //       description: `Click on the Sun at the top right of your screen`,\n  //       status: 'info',\n  //       duration: 5000,\n  //       isClosable: true,\n  //     });\n  //   } else {\n  //     toast({\n  //       position: 'bottom-left',\n  //       title: `Try out light mode`,\n  //       description: `Click on the Moon at the top right of your screen`,\n  //       status: 'info',\n  //       duration: 5000,\n  //       isClosable: true,\n  //     });\n  //   }\n  // });\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"3xl\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}