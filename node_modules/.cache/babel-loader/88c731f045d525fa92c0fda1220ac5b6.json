{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sumant/Desktop/Chakra/app/src/Components/Canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { Box } from '@chakra-ui/react';\n\nconst Canvas = ({\n  color\n}) => {\n  _s();\n\n  const canvasRef = useRef(null);\n\n  class Circle {\n    constructor(x, y, dx, dy, radius) {\n      this.x = x;\n      this.y = y;\n      this.dx = dx;\n      this.dy = dy;\n      this.radius = radius;\n      this.opacity = Math.random();\n      this.time = 1;\n    }\n\n    draw() {\n      c.beginPath();\n      c.globalAlpha = this.opacity;\n      c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      c.fillStyle = 'white';\n      c.fill();\n    }\n\n    update() {\n      if (this.x + this.radius > canvas.width || this.x + this.radius < 0) {\n        this.dx = -this.dx;\n      }\n\n      if (this.y + this.radius > canvas.height || this.y + this.radius < 0) {\n        this.dy = -this.dy;\n      }\n\n      this.x += this.dx;\n      this.y += this.dy;\n      this.time += 1;\n      this.draw();\n    }\n\n  }\n\n  const draw = (ctx, frameCount) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(50, 100, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n\n  const resizeCanvasToDisplaySize = canvas => {\n    // const { width, height } = canvas.getBoundingClientRect();\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    console.log(width);\n    console.log(height);\n\n    if (canvas.width !== width || canvas.height !== height) {\n      canvas.width = width;\n      canvas.height = height;\n    }\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    resizeCanvasToDisplaySize(canvas);\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"absolute\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Canvas;\nexport default Canvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/sumant/Desktop/Chakra/app/src/Components/Canvas.js"],"names":["React","useRef","useEffect","Box","Canvas","color","canvasRef","Circle","constructor","x","y","dx","dy","radius","opacity","Math","random","time","draw","c","beginPath","globalAlpha","arc","PI","fillStyle","fill","update","canvas","width","height","ctx","frameCount","clearRect","sin","resizeCanvasToDisplaySize","window","innerWidth","innerHeight","console","log","current","context","getContext","animationFrameId","render","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Box } from '@chakra-ui/react';\n\nconst Canvas = ({ color }) => {\n  const canvasRef = useRef(null);\n\n  class Circle {\n    constructor(x, y, dx, dy, radius) {\n      this.x = x;\n      this.y = y;\n      this.dx = dx;\n      this.dy = dy;\n      this.radius = radius;\n      this.opacity = Math.random();\n      this.time = 1;\n    }\n\n    draw() {\n      c.beginPath();\n      c.globalAlpha = this.opacity;\n      c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n      c.fillStyle = 'white';\n      c.fill();\n    }\n\n    update() {\n      if (this.x + this.radius > canvas.width || this.x + this.radius < 0) {\n        this.dx = -this.dx;\n      }\n\n      if (this.y + this.radius > canvas.height || this.y + this.radius < 0) {\n        this.dy = -this.dy;\n      }\n\n      this.x += this.dx;\n      this.y += this.dy;\n      this.time += 1;\n\n      this.draw();\n    }\n  }\n\n  const draw = (ctx, frameCount) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(50, 100, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n\n  const resizeCanvasToDisplaySize = canvas => {\n    // const { width, height } = canvas.getBoundingClientRect();\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    console.log(width);\n    console.log(height);\n\n    if (canvas.width !== width || canvas.height !== height) {\n      canvas.width = width;\n      canvas.height = height;\n    }\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    resizeCanvasToDisplaySize(canvas);\n    let frameCount = 0;\n    let animationFrameId;\n\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n\n  return (\n    <Box position=\"absolute\">\n      <canvas ref={canvasRef} />\n    </Box>\n  );\n};\n\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}