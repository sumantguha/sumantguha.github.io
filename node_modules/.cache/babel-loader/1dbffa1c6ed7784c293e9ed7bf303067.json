{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sumant/Desktop/Chakra/app/src/ColorModeSwitcher.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useColorMode, useColorModeValue, IconButton, createStandaloneToast } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\nexport const ColorModeSwitcher = props => {\n  _s();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const icon = text === 'dark' ? 'Moon' : 'Sun';\n  const [isLoading, setIsLoading] = useState(false);\n  const toast = createStandaloneToast();\n  useEffect(() => {\n    setIsLoading(true);\n    toast({\n      position: 'bottom-left',\n      title: `Try out ${text} mode`,\n      description: `Click on ${icon} at the top right of your screen`,\n      status: 'info',\n      duration: 5000,\n      isClosable: true\n    });\n  }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    size: \"md\",\n    fontSize: \"3xl\",\n    \"aria-label\": `Switch to ${text} mode`,\n    variant: \"ghost\",\n    color: \"current\",\n    onClick: toggleColorMode,\n    icon: /*#__PURE__*/_jsxDEV(SwitchIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this),\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ColorModeSwitcher, \"uwKgJAn49Q+J6LeoULllQD5AUvw=\", false, function () {\n  return [useColorMode, useColorModeValue, useColorModeValue];\n});\n\n_c = ColorModeSwitcher;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorModeSwitcher\");","map":{"version":3,"sources":["/Users/sumant/Desktop/Chakra/app/src/ColorModeSwitcher.js"],"names":["React","useEffect","useState","useColorMode","useColorModeValue","IconButton","createStandaloneToast","FaMoon","FaSun","ColorModeSwitcher","props","toggleColorMode","text","SwitchIcon","icon","isLoading","setIsLoading","toast","position","title","description","status","duration","isClosable"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,YADF,EAEEC,iBAFF,EAGEC,UAHF,EAIEC,qBAJF,QAKO,kBALP;AAMA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,gBAA9B;AAEA,OAAO,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAAA;;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAsBR,YAAY,EAAxC;AACA,QAAMS,IAAI,GAAGR,iBAAiB,CAAC,MAAD,EAAS,OAAT,CAA9B;AACA,QAAMS,UAAU,GAAGT,iBAAiB,CAACG,MAAD,EAASC,KAAT,CAApC;AACA,QAAMM,IAAI,GAAGF,IAAI,KAAK,MAAT,GAAkB,MAAlB,GAA2B,KAAxC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMe,KAAK,GAAGX,qBAAqB,EAAnC;AACAL,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,KAAK,CAAC;AACJC,MAAAA,QAAQ,EAAE,aADN;AAEJC,MAAAA,KAAK,EAAG,WAAUP,IAAK,OAFnB;AAGJQ,MAAAA,WAAW,EAAG,YAAWN,IAAK,kCAH1B;AAIJO,MAAAA,MAAM,EAAE,MAJJ;AAKJC,MAAAA,QAAQ,EAAE,IALN;AAMJC,MAAAA,UAAU,EAAE;AANR,KAAD,CAAL;AAQD,GAVQ,EAUN,CAACR,SAAD,CAVM,CAAT;AAYA,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAC,IADP;AAEE,IAAA,QAAQ,EAAC,KAFX;AAGE,kBAAa,aAAYH,IAAK,OAHhC;AAIE,IAAA,OAAO,EAAC,OAJV;AAKE,IAAA,KAAK,EAAC,SALR;AAME,IAAA,OAAO,EAAED,eANX;AAOE,IAAA,IAAI,eAAE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA,OAQMD;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCM;;GAAMD,iB;UACiBN,Y,EACfC,iB,EACMA,iB;;;KAHRK,iB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n  createStandaloneToast,\n} from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const icon = text === 'dark' ? 'Moon' : 'Sun';\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toast = createStandaloneToast();\n  useEffect(() => {\n    setIsLoading(true);\n    toast({\n      position: 'bottom-left',\n      title: `Try out ${text} mode`,\n      description: `Click on ${icon} at the top right of your screen`,\n      status: 'info',\n      duration: 5000,\n      isClosable: true,\n    });\n  }, [isLoading]);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"3xl\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}