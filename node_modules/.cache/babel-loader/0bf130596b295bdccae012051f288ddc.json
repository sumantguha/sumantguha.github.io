{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sumant/Desktop/portfolio3/src/Pages/Projects/maps.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Box, ModalBody, Button, Heading, Link, Code, useColorModeValue } from '@chakra-ui/react';\nimport { BsPlay, BsFileEarmarkCode } from 'react-icons/bs';\n\nconst Maps = () => {\n  _s();\n\n  const firstColor = useColorModeValue('red', 'yellow');\n  const secondColor = useColorModeValue('blue.600', 'yellow.200');\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        mr: 5,\n        leftIcon: /*#__PURE__*/_jsxDEV(BsPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 34\n        }, this),\n        colorScheme: firstColor,\n        size: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          as: \"a\",\n          _hover: {\n            textDecor: 'none'\n          },\n          href: \"https://github.com/sumantguha/Java-Style-Checker\",\n          isExternal: true,\n          children: \"Try Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        leftIcon: /*#__PURE__*/_jsxDEV(BsFileEarmarkCode, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 27\n        }, this),\n        colorScheme: \"blue\",\n        size: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          as: \"a\",\n          _hover: {\n            textDecor: 'none'\n          },\n          href: \"https://github.com/sumantguha/Java-Style-Checker\",\n          isExternal: true,\n          children: \"View Source Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        display: \"inline-block\",\n        mr: 2,\n        size: \"sm\",\n        children: \"Development Frameworks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Code, {\n        children: \"Java\",\n        mr: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), \"For my datastructures and algorithms coursework, I developed HuskyMaps, a map visualization (similar to google maps) specific to the University of Washington. It uses data about the university campus to plot out the entire university and can give directions between any two points of the campus. It computes distances between the different buildings on campus and acts as a simple front end interface for studets and faculty. It covers more than a standard google maps search within the university because it has a more accurate representation of different buildings. It was very interesting to develop this full stack implementation of the map service, because it required me to work with multiple (Java) frameworks and more importantly, design efficient algorithms at scale. To determine the shortest path between any two buildings/points within campus, an efficient implementation of A* search\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Maps, \"iDXrt31gwQEz4OS1dZ5DVxtHCso=\", false, function () {\n  return [useColorModeValue, useColorModeValue];\n});\n\n_c = Maps;\nexport default Maps;\n\nvar _c;\n\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"sources":["/Users/sumant/Desktop/portfolio3/src/Pages/Projects/maps.js"],"names":["React","Box","ModalBody","Button","Heading","Link","Code","useColorModeValue","BsPlay","BsFileEarmarkCode","Maps","firstColor","secondColor","textDecor"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,iBAPF,QAQO,kBARP;AASA,SAASC,MAAT,EAAiBC,iBAAjB,QAA0C,gBAA1C;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,UAAU,GAAGJ,iBAAiB,CAAC,KAAD,EAAQ,QAAR,CAApC;AACA,QAAMK,WAAW,GAAGL,iBAAiB,CAAC,UAAD,EAAa,YAAb,CAArC;AACA,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,SAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,CAAZ;AAAe,QAAA,QAAQ,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAAzB;AAAqC,QAAA,WAAW,EAAEI,UAAlD;AAA8D,QAAA,IAAI,EAAC,IAAnE;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,GADL;AAEE,UAAA,MAAM,EAAE;AAAEE,YAAAA,SAAS,EAAE;AAAb,WAFV;AAGE,UAAA,IAAI,EAAC,kDAHP;AAIE,UAAA,UAAU,EAAE,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AAAQ,QAAA,QAAQ,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAyC,QAAA,WAAW,EAAC,MAArD;AAA4D,QAAA,IAAI,EAAC,IAAjE;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAC,GADL;AAEE,UAAA,MAAM,EAAE;AAAEA,YAAAA,SAAS,EAAE;AAAb,WAFV;AAGE,UAAA,IAAI,EAAC,kDAHP;AAIE,UAAA,UAAU,EAAE,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AAAA;AAAA;AAAA;AAAA,cArBF,eAsBE;AAAA;AAAA;AAAA;AAAA,cAtBF,eAuBE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAC,cAAjB;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAuC,QAAA,IAAI,EAAC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF,eA0BE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,MAAf;AAAsB,QAAA,EAAE,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,cA1BF,eA2BE;AAAA;AAAA;AAAA;AAAA,cA3BF,eA4BE;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CAlDD;;GAAMH,I;UACeH,iB,EACCA,iB;;;KAFhBG,I;AAoDN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport {\n  Box,\n  ModalBody,\n  Button,\n  Heading,\n  Link,\n  Code,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { BsPlay, BsFileEarmarkCode } from 'react-icons/bs';\n\nconst Maps = () => {\n  const firstColor = useColorModeValue('red', 'yellow');\n  const secondColor = useColorModeValue('blue.600', 'yellow.200');\n  return (\n    <Box>\n      <ModalBody>\n        <Button mr={5} leftIcon={<BsPlay />} colorScheme={firstColor} size=\"lg\">\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://github.com/sumantguha/Java-Style-Checker\"\n            isExternal={true}\n          >\n            Try Now\n          </Link>\n        </Button>\n        <Button leftIcon={<BsFileEarmarkCode />} colorScheme=\"blue\" size=\"lg\">\n          <Link\n            as=\"a\"\n            _hover={{ textDecor: 'none' }}\n            href=\"https://github.com/sumantguha/Java-Style-Checker\"\n            isExternal={true}\n          >\n            View Source Code\n          </Link>\n        </Button>\n        <br />\n        <br />\n        <Heading display=\"inline-block\" mr={2} size=\"sm\">\n          Development Frameworks:\n        </Heading>\n        <Code children=\"Java\" mr={2} />\n        <br />\n        <br />\n        For my datastructures and algorithms coursework, I developed HuskyMaps,\n        a map visualization (similar to google maps) specific to the University\n        of Washington. It uses data about the university campus to plot out the\n        entire university and can give directions between any two points of the\n        campus. It computes distances between the different buildings on campus\n        and acts as a simple front end interface for studets and faculty. It\n        covers more than a standard google maps search within the university\n        because it has a more accurate representation of different buildings. It\n        was very interesting to develop this full stack implementation of the\n        map service, because it required me to work with multiple (Java)\n        frameworks and more importantly, design efficient algorithms at scale.\n        To determine the shortest path between any two buildings/points within\n        campus, an efficient implementation of A* search\n      </ModalBody>\n    </Box>\n  );\n};\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}