{"ast":null,"code":"import e from \"@bundled-es-modules/pdfjs-dist/build/pdf\";\nimport t, { useRef as r, useEffect as o, useState as a, useMemo as c } from \"react\";\n\nconst n = ({\n  file: e,\n  onDocumentComplete: a,\n  page: c,\n  scale: n,\n  rotate: s,\n  cMapUrl: i,\n  cMapPacked: d,\n  workerSrc: p,\n  withCredentials: h\n}) => {\n  const u = r(null),\n        [, w] = l({\n    canvasEl: u,\n    file: e,\n    page: c,\n    scale: n,\n    rotate: s,\n    cMapUrl: i,\n    cMapPacked: d,\n    workerSrc: p,\n    withCredentials: h\n  });\n  return o(() => {\n    a(w);\n  }, [w]), t.createElement(\"canvas\", {\n    ref: u\n  });\n};\n\nn.defaultProps = {\n  onDocumentComplete: () => {}\n};\n\nconst l = ({\n  canvasEl: t,\n  file: r,\n  scale: n = 1,\n  rotate: l = 0,\n  page: s = 1,\n  cMapUrl: i,\n  cMapPacked: d,\n  workerSrc: p = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/2.1.266/pdf.worker.js\",\n  withCredentials: h = !1\n}) => {\n  const [u, w] = a();\n  o(() => {\n    e.GlobalWorkerOptions.workerSrc = p;\n  }, []), o(() => {\n    const t = {\n      url: r,\n      withCredentials: h\n    };\n    i && (t.cMapUrl = i, t.cMapPacked = d), e.getDocument(t).promise.then(w);\n  }, [r, h]), o(() => {\n    u && u.getPage(s).then(e => f(e));\n  }, [u, s, n, l, t]);\n\n  const f = e => {\n    const r = 0 === l ? e.rotate : e.rotate + l;\n    let o = 1;\n    o = window.devicePixelRatio;\n    const a = n * o,\n          c = e.getViewport({\n      scale: a,\n      rotation: r\n    }),\n          s = t.current;\n    if (!s) return;\n    const i = s.getContext(\"2d\");\n    s.style.width = `${c.width / o}px`, s.style.height = `${c.height / o}px`, s.height = c.height, s.width = c.width;\n    const d = {\n      canvasContext: i,\n      viewport: c\n    };\n    e.render(d);\n  },\n        m = c(() => !u, [u]),\n        g = c(() => u ? u._pdfInfo.numPages : null, [u]);\n\n  return [m, g];\n};\n\nexport default n;\nexport { l as usePdf };","map":{"version":3,"sources":["../src/index.tsx"],"names":["Pdf","file","onDocumentComplete","page","scale","rotate","cMapUrl","cMapPacked","workerSrc","withCredentials","canvasEl","useRef","numPages","usePdf","useEffect","React","ref","defaultProps","pdf","setPdf","useState","pdfjs","GlobalWorkerOptions","config","url","getDocument","promise","then","getPage","p","drawPDF","rotation","dpRatio","window","devicePixelRatio","adjustedScale","viewport","getViewport","canvas","current","canvasContext","getContext","style","width","height","renderContext","render","loading","useMemo","_pdfInfo"],"mappings":"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","sourcesContent":["import pdfjs from '@bundled-es-modules/pdfjs-dist/build/pdf';\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\n\ntype ComponentProps = {\n  file: string;\n  onDocumentComplete: (numPages: number) => void;\n  page?: number;\n  scale?: number;\n  rotate?: number;\n  cMapUrl?: string;\n  cMapPacked?: boolean;\n  workerSrc?: string;\n  withCredentials?: boolean;\n};\n\nconst Pdf = ({\n  file,\n  onDocumentComplete,\n  page,\n  scale,\n  rotate,\n  cMapUrl,\n  cMapPacked,\n  workerSrc,\n  withCredentials,\n}: ComponentProps) => {\n  const canvasEl = useRef<HTMLCanvasElement>(null);\n  const [, numPages] = usePdf({\n    canvasEl,\n    file,\n    page,\n    scale,\n    rotate,\n    cMapUrl,\n    cMapPacked,\n    workerSrc,\n    withCredentials,\n  });\n\n  useEffect(() => {\n    onDocumentComplete(numPages);\n  }, [numPages]);\n\n  return <canvas ref={canvasEl} />;\n};\n\nPdf.defaultProps = {\n  onDocumentComplete: () => {},\n};\n\ntype HookProps = {\n  canvasEl: React.RefObject<HTMLCanvasElement>;\n  file: string;\n  scale?: number;\n  rotate?: number;\n  page?: number;\n  cMapUrl?: string;\n  cMapPacked?: boolean;\n  workerSrc?: string;\n  withCredentials?: boolean;\n};\n\nexport const usePdf = ({\n  canvasEl,\n  file,\n  scale = 1,\n  rotate = 0,\n  page = 1,\n  cMapUrl,\n  cMapPacked,\n  workerSrc = '//cdnjs.cloudflare.com/ajax/libs/pdf.js/2.1.266/pdf.worker.js',\n  withCredentials = false,\n}: HookProps) => {\n  const [pdf, setPdf] = useState();\n\n  useEffect(() => {\n    pdfjs.GlobalWorkerOptions.workerSrc = workerSrc;\n  }, []);\n\n  useEffect(() => {\n    const config: pdfjs.PDFSource = { url: file, withCredentials };\n    if (cMapUrl) {\n      config.cMapUrl = cMapUrl;\n      config.cMapPacked = cMapPacked;\n    }\n    pdfjs.getDocument(config).promise.then(setPdf);\n  }, [file, withCredentials]);\n\n  // handle changes\n  useEffect(() => {\n    if (pdf) {\n      pdf.getPage(page).then((p: any) => drawPDF(p));\n    }\n  }, [pdf, page, scale, rotate, canvasEl]);\n\n  // draw a page of the pdf\n  const drawPDF = (page: any) => {\n    // Because this page's rotation option overwrites pdf default rotation value,\n    // calculating page rotation option value from pdf default and this component prop rotate.\n    const rotation = rotate === 0 ? page.rotate : page.rotate + rotate;\n    let dpRatio = 1;\n    dpRatio = window.devicePixelRatio;\n    const adjustedScale = scale * dpRatio;\n    const viewport = page.getViewport({ scale: adjustedScale, rotation });\n    const canvas = canvasEl.current;\n    if (!canvas) {\n      return;\n    }\n    const canvasContext = canvas.getContext('2d');\n    canvas.style.width = `${viewport.width / dpRatio}px`;\n    canvas.style.height = `${viewport.height / dpRatio}px`;\n    canvas.height = viewport.height;\n    canvas.width = viewport.width;\n    const renderContext = {\n      canvasContext,\n      viewport,\n    };\n    page.render(renderContext);\n  };\n\n  const loading = useMemo(() => !pdf, [pdf]);\n  const numPages = useMemo(() => (pdf ? pdf._pdfInfo.numPages : null), [pdf]);\n\n  return [loading, numPages];\n};\n\nexport default Pdf;\n"]},"metadata":{},"sourceType":"module"}