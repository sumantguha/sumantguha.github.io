{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sumant/Desktop/Chakra/app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { ChakraProvider, Box, IconButton, useColorMode, useColorModeValue, extendTheme } from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\nimport AnimatedCursor from 'react-animated-cursor';\nimport { FaMoon, FaSun } from 'react-icons/fa';\nimport Projects from './Pages/Projects';\nimport Experience from './Pages/Experience';\nimport AboutMe from './Pages/AboutMe';\nimport Navbar from './Components/Navbar';\nimport IntroSection from './Pages/IntroSection';\nimport Footer from './Components/Footer';\nimport ParticlesBg from 'particles-bg';\nimport { motion } from 'framer-motion';\nimport { CgMouse } from 'react-icons/cg';\nconst theme = extendTheme({\n  styles: {\n    global: props => ({\n      body: {\n        bg: mode('#F7FAFC', '#171923')(props),\n        color: mode('#171923', '#F7FAFC')(props)\n      }\n    })\n  }\n});\n\nconst App = () => {\n  _s();\n\n  const myRef = useRef(null);\n  const MotionButton = motion.custom(IconButton);\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n      bg: true,\n      type: \"circle\",\n      num: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(AnimatedCursor, {\n        innerSize: 20,\n        outerSize: 20,\n        color: \"193, 11, 111\",\n        outerAlpha: 0.2,\n        innerScale: 0.7,\n        outerScale: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: \"0 auto 0 auto\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        maxW: \"100%\",\n        h: \"100vh\",\n        position: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(MotionButton, {\n          whileTap: {\n            scale: 0.9\n          },\n          whileHover: {\n            scale: 1.2\n          },\n          position: \"absolute\",\n          bottom: \"2%\",\n          icon: /*#__PURE__*/_jsxDEV(CgMouse, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this),\n          variant: \"none\",\n          fontSize: \"1.5rem\",\n          mx: \"auto\",\n          textAlign: \"center\",\n          onClick: () => myRef.current.scrollIntoView({\n            behavior: 'smooth'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(IntroSection, {\n            pl: 20,\n            ml: 10,\n            pr: 20,\n            mr: 10,\n            textAlign: \"center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n            position: \"absolute\",\n            left: \"0\",\n            top: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AboutMe, {\n        scrollRef: myRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Projects, {\n        h: \"auto\",\n        pb: \"20\",\n        w: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Experience, {\n        h: \"auto\",\n        pb: \"20\",\n        w: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        position: \"absolute\",\n        left: \"0\",\n        bottom: \"0\",\n        mb: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"wYF4W973D0682KeLHvb0qnH30CA=\");\n\n_c = App;\nexport const ColorModeSwitcher = props => {\n  _s2();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    size: \"md\",\n    fontSize: \"3xl\",\n    \"aria-label\": `Switch to ${text} mode`,\n    variant: \"ghost\",\n    color: \"current\",\n    onClick: toggleColorMode,\n    icon: /*#__PURE__*/_jsxDEV(SwitchIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this),\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ColorModeSwitcher, \"V165luumhZUVDl02bS0/lj2LpLw=\", false, function () {\n  return [useColorMode, useColorModeValue, useColorModeValue];\n});\n\n_c2 = ColorModeSwitcher;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ColorModeSwitcher\");","map":{"version":3,"sources":["/Users/sumant/Desktop/Chakra/app/src/App.js"],"names":["React","useRef","ChakraProvider","Box","IconButton","useColorMode","useColorModeValue","extendTheme","mode","AnimatedCursor","FaMoon","FaSun","Projects","Experience","AboutMe","Navbar","IntroSection","Footer","ParticlesBg","motion","CgMouse","theme","styles","global","props","body","bg","color","App","myRef","MotionButton","custom","scale","current","scrollIntoView","behavior","ColorModeSwitcher","toggleColorMode","text","SwitchIcon"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport {\n  ChakraProvider,\n  Box,\n  IconButton,\n  useColorMode,\n  useColorModeValue,\n  extendTheme,\n} from '@chakra-ui/react';\nimport { mode } from '@chakra-ui/theme-tools';\nimport AnimatedCursor from 'react-animated-cursor';\n\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nimport Projects from './Pages/Projects';\nimport Experience from './Pages/Experience';\nimport AboutMe from './Pages/AboutMe';\nimport Navbar from './Components/Navbar';\nimport IntroSection from './Pages/IntroSection';\nimport Footer from './Components/Footer';\nimport ParticlesBg from 'particles-bg';\n\nimport { motion } from 'framer-motion';\n\nimport { CgMouse } from 'react-icons/cg';\n\nconst theme = extendTheme({\n  styles: {\n    global: props => ({\n      body: {\n        bg: mode('#F7FAFC', '#171923')(props),\n        color: mode('#171923', '#F7FAFC')(props),\n      },\n    }),\n  },\n});\n\nconst App = () => {\n  const myRef = useRef(null);\n  const MotionButton = motion.custom(IconButton);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <ParticlesBg bg={true} type=\"circle\" num={2} />\n      <Box>\n        <AnimatedCursor\n          innerSize={20}\n          outerSize={20}\n          color=\"193, 11, 111\"\n          outerAlpha={0.2}\n          innerScale={0.7}\n          outerScale={5}\n        />\n        <Box\n          m=\"0 auto 0 auto\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          maxW=\"100%\"\n          h=\"100vh\"\n          position=\"relative\"\n        >\n          <MotionButton\n            whileTap={{ scale: 0.9 }}\n            whileHover={{ scale: 1.2 }}\n            position=\"absolute\"\n            bottom=\"2%\"\n            icon={<CgMouse />}\n            variant=\"none\"\n            fontSize=\"1.5rem\"\n            mx=\"auto\"\n            textAlign=\"center\"\n            onClick={() => myRef.current.scrollIntoView({ behavior: 'smooth' })}\n          />\n          <Box width=\"100%\">\n            <IntroSection pl={20} ml={10} pr={20} mr={10} textAlign=\"center\" />\n            <Navbar position=\"absolute\" left=\"0\" top=\"0\" />\n          </Box>\n        </Box>\n        <AboutMe scrollRef={myRef} />\n        <Projects h=\"auto\" pb=\"20\" w=\"100%\" />\n        <Experience h=\"auto\" pb=\"20\" w=\"100%\" />\n        <Footer position=\"absolute\" left=\"0\" bottom=\"0\" mb={5} />\n      </Box>\n    </ChakraProvider>\n  );\n};\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"3xl\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}