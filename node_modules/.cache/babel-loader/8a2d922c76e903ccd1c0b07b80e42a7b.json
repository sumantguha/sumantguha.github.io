{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sumant/Desktop/sumantguha.github.io/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { ChakraProvider, Box, IconButton, useColorMode, useColorModeValue, extendTheme, Text, Fade } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\nimport Projects from \"./Pages/Projects\";\nimport Experience from \"./Pages/Experience\";\nimport AboutMe from \"./Pages/AboutMe\";\nimport Navbar from \"./Components/Navbar\";\nimport IntroSection from \"./Pages/IntroSection\";\nimport Footer from \"./Components/Footer\";\nimport AnimatedCursor from \"react-animated-cursor\";\nimport Loader from \"./Pages/Loader\";\nimport { CgMouse } from \"react-icons/cg\";\nimport Hamburger from \"./Components/Hamburger\";\nconst theme = extendTheme({\n  styles: {\n    global: props => ({\n      body: {\n        bg: mode(\"#F7FAFC\", \"#171923\")(props),\n        color: mode(\"#171923\", \"#F7FAFC\")(props)\n      }\n    })\n  }\n});\n\nconst App = () => {\n  _s();\n\n  const myRef = useRef(null);\n  const [isHidden, setIsHidden] = useState(\"visible\");\n  const [navbar, setNavbar] = useState(false);\n  const [bubbles, setBubbles] = useState(false);\n  const [intro, setIntro] = useState(false);\n  const [buttons, setButtons] = useState(false);\n\n  const disableScroll = () => {\n    let x = window.scrollX;\n    let y = window.scrollY;\n\n    window.onscroll = () => {\n      window.scrollTo(x, y);\n    };\n  };\n\n  const enableScroll = () => {\n    window.onscroll = () => {};\n  };\n\n  useEffect(() => {\n    disableScroll();\n    setInterval(() => {\n      enableScroll();\n      setIsHidden(\"none\");\n    }, 2000);\n    setInterval(() => {\n      setNavbar(true);\n    }, 2250);\n    setInterval(() => {\n      setIntro(true);\n    }, 2750);\n    setInterval(() => {\n      setButtons(true);\n    }, 3250);\n    setInterval(() => {\n      setBubbles(true);\n    }, 4000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(AnimatedCursor, {\n      innerSize: 25,\n      outerSize: 20,\n      color: \"193, 11, 111\",\n      outerAlpha: 0.2,\n      innerScale: 0.7,\n      outerScale: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        m: \"0 auto 0 auto\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        maxW: \"100%\",\n        h: \"100vh\",\n        position: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: {\n            base: \"none\",\n            lg: \"block\"\n          },\n          position: \"absolute\",\n          bottom: \"2%\",\n          mx: \"auto\",\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Fade, {\n            in: bubbles,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              transition: \"0.3s\",\n              _hover: {\n                transform: \"scale(1.2)\",\n                transition: \"0.3s\"\n              },\n              icon: /*#__PURE__*/_jsxDEV(CgMouse, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 23\n              }, this),\n              variant: \"none\",\n              fontSize: \"1.5rem\",\n              onClick: () => myRef.current.scrollIntoView({\n                behavior: \"smooth\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"sm\",\n              fontWeight: 600,\n              letterSpacing: \"0.05rem\",\n              textTransform: \"lowercase\",\n              children: \"Scroll Down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          width: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(IntroSection, {\n            heading: intro,\n            buttons: buttons\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Fade, {\n            in: navbar,\n            children: /*#__PURE__*/_jsxDEV(Navbar, {\n              visibility: {\n                base: \"hidden\",\n                xl: \"visible\"\n              } // display={{base: \"none\", md: \"block\"}}\n              ,\n              position: \"absolute\",\n              left: \"0\",\n              top: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            visibility: {\n              base: \"visible\",\n              xl: \"hidden\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(ColorModeSwitcher, {\n              position: \"absolute\",\n              top: 0,\n              left: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Hamburger, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      display: isHidden\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"m3fpWimjZM5+ycjdmLkEwFRz9zM=\");\n\n_c = App;\nexport const ColorModeSwitcher = props => {\n  _s2();\n\n  const {\n    toggleColorMode\n  } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  return /*#__PURE__*/_jsxDEV(IconButton, {\n    size: \"md\",\n    fontSize: \"3xl\",\n    \"aria-label\": `Switch to ${text} mode`,\n    variant: \"ghost\",\n    color: \"current\",\n    onClick: toggleColorMode,\n    icon: /*#__PURE__*/_jsxDEV(SwitchIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this),\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ColorModeSwitcher, \"V165luumhZUVDl02bS0/lj2LpLw=\", false, function () {\n  return [useColorMode, useColorModeValue, useColorModeValue];\n});\n\n_c2 = ColorModeSwitcher;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ColorModeSwitcher\");","map":{"version":3,"sources":["/Users/sumant/Desktop/sumantguha.github.io/src/App.js"],"names":["React","useRef","useState","useEffect","ChakraProvider","Box","IconButton","useColorMode","useColorModeValue","extendTheme","Text","Fade","mode","FaMoon","FaSun","Projects","Experience","AboutMe","Navbar","IntroSection","Footer","AnimatedCursor","Loader","CgMouse","Hamburger","theme","styles","global","props","body","bg","color","App","myRef","isHidden","setIsHidden","navbar","setNavbar","bubbles","setBubbles","intro","setIntro","buttons","setButtons","disableScroll","x","window","scrollX","y","scrollY","onscroll","scrollTo","enableScroll","setInterval","base","lg","transform","transition","current","scrollIntoView","behavior","xl","ColorModeSwitcher","toggleColorMode","text","SwitchIcon"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport {\n  ChakraProvider,\n  Box,\n  IconButton,\n  useColorMode,\n  useColorModeValue,\n  extendTheme,\n  Text,\n  Fade,\n} from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport { FaMoon, FaSun } from \"react-icons/fa\";\n\nimport Projects from \"./Pages/Projects\";\nimport Experience from \"./Pages/Experience\";\nimport AboutMe from \"./Pages/AboutMe\";\nimport Navbar from \"./Components/Navbar\";\nimport IntroSection from \"./Pages/IntroSection\";\nimport Footer from \"./Components/Footer\";\nimport AnimatedCursor from \"react-animated-cursor\";\nimport Loader from \"./Pages/Loader\";\n\nimport { CgMouse } from \"react-icons/cg\";\nimport Hamburger from \"./Components/Hamburger\";\n\nconst theme = extendTheme({\n  styles: {\n    global: (props) => ({\n      body: {\n        bg: mode(\"#F7FAFC\", \"#171923\")(props),\n        color: mode(\"#171923\", \"#F7FAFC\")(props),\n      },\n    }),\n  },\n});\n\nconst App = () => {\n  const myRef = useRef(null);\n  const [isHidden, setIsHidden] = useState(\"visible\");\n  const [navbar, setNavbar] = useState(false);\n  const [bubbles, setBubbles] = useState(false);\n  const [intro, setIntro] = useState(false);\n  const [buttons, setButtons] = useState(false);\n\n  const disableScroll = () => {\n    let x = window.scrollX;\n    let y = window.scrollY;\n    window.onscroll = () => {\n      window.scrollTo(x, y);\n    };\n  };\n\n  const enableScroll = () => {\n    window.onscroll = () => {};\n  };\n\n  useEffect(() => {\n    disableScroll();\n    setInterval(() => {\n      enableScroll();\n      setIsHidden(\"none\");\n    }, 2000);\n    setInterval(() => {\n      setNavbar(true);\n    }, 2250);\n    setInterval(() => {\n      setIntro(true);\n    }, 2750);\n    setInterval(() => {\n      setButtons(true);\n    }, 3250);\n    setInterval(() => {\n      setBubbles(true);\n    }, 4000);\n  }, []);\n\n  return (\n    <ChakraProvider theme={theme}>\n      <AnimatedCursor\n        innerSize={25}\n        outerSize={20}\n        color=\"193, 11, 111\"\n        outerAlpha={0.2}\n        innerScale={0.7}\n        outerScale={2}\n      />\n      <Box>\n        <Box\n          m=\"0 auto 0 auto\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          maxW=\"100%\"\n          h=\"100vh\"\n          position=\"relative\"\n        >\n          <Box\n            display={{ base: \"none\", lg: \"block\" }}\n            position=\"absolute\"\n            bottom=\"2%\"\n            mx=\"auto\"\n            textAlign=\"center\"\n          >\n            <Fade in={bubbles}>\n              <IconButton\n                transition=\"0.3s\"\n                _hover={{ transform: \"scale(1.2)\", transition: \"0.3s\" }}\n                icon={<CgMouse />}\n                variant=\"none\"\n                fontSize=\"1.5rem\"\n                onClick={() =>\n                  myRef.current.scrollIntoView({ behavior: \"smooth\" })\n                }\n              />\n              <Text\n                fontSize=\"sm\"\n                fontWeight={600}\n                letterSpacing=\"0.05rem\"\n                textTransform=\"lowercase\"\n              >\n                Scroll Down\n              </Text>\n            </Fade>\n          </Box>\n\n          <Box width=\"100%\">\n            <IntroSection heading={intro} buttons={buttons} />\n\n            <Fade in={navbar}>\n              <Navbar\n                visibility={{ base: \"hidden\", xl: \"visible\" }}\n                // display={{base: \"none\", md: \"block\"}}\n                position=\"absolute\"\n                left=\"0\"\n                top=\"0\"\n              />\n            </Fade>\n\n            <Box visibility={{ base: \"visible\", xl: \"hidden\" }}>\n              <ColorModeSwitcher position=\"absolute\" top={0} left={0} />\n              <Hamburger />\n            </Box>\n          </Box>\n        </Box>\n        {/* <AboutMe scrollRef={myRef} />\n        <Projects h=\"auto\" pb=\"20\" w=\"100%\" />\n\n        <Experience h=\"auto\" pb=\"20\" w=\"100%\" />\n        <Footer position=\"absolute\" h=\"auto\" left=\"0\" bottom=\"0\" pb={5} /> */}\n      </Box>\n\n      <Loader display={isHidden} />\n    </ChakraProvider>\n  );\n};\n\nexport const ColorModeSwitcher = (props) => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue(\"dark\", \"light\");\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"3xl\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}